{"ast":null,"code":"var _jsxFileName = \"/home/siddiq/Personal/VOICE_BASED_NEWS_APPLICATION/alan_ai/src/components/NewsCards/NewsCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\nimport useStyles from './styles.js';\nimport NewsCard from '../NewsCard/NewsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infoCards = [{\n  color: '#FFA500',\n  title: 'Latest News',\n  text: 'Give me the latest news'\n}, {\n  color: '#F75D59',\n  title: 'News by Categories',\n  info: 'Business, Entertainment, General, Health, Science, Sports, Technology',\n  text: 'Give me the latest Technology news'\n}, {\n  color: '#00FFFF',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Tesla, Smartphones...',\n  text: 'What\\'s up with PlayStation 5'\n}, {\n  color: '#FF00FF',\n  title: 'News by Sources',\n  info: 'Tech Crunch, Wired, BBC News, Buzzfeed, ABC News, Time...',\n  text: 'Give me the news from Buzzfeed'\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/_jsxDEV(Grow, {\n      in: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.container,\n        container: true,\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: infoCards.map(infoCard => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: classes.infoCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            style: {\n              backgroundColor: infoCard.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h5\",\n              children: infoCard.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this), infoCard.info ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: infoCard.title.split(' ')[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 78\n              }, this), \": \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 127\n              }, this), infoCard.info]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 38\n            }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h6\",\n              children: [\"Try saying: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 73\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: infoCard.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: articles.map((article, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(NewsCard, {\n          article: article,\n          activeArticle: activeArticle,\n          i: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewsCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewsCards;\nexport default NewsCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"sources":["/home/siddiq/Personal/VOICE_BASED_NEWS_APPLICATION/alan_ai/src/components/NewsCards/NewsCards.js"],"names":["React","Grid","Grow","Typography","useStyles","NewsCard","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\n\nimport useStyles from './styles.js';\nimport NewsCard from '../NewsCard/NewsCard';\n\nconst infoCards = [\n    { color: '#FFA500', title: 'Latest News', text: 'Give me the latest news' },\n    { color: '#F75D59', title: 'News by Categories', info: 'Business, Entertainment, General, Health, Science, Sports, Technology', text: 'Give me the latest Technology news' },\n    { color: '#00FFFF', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Tesla, Smartphones...', text: 'What\\'s up with PlayStation 5' },\n    { color: '#FF00FF', title: 'News by Sources', info: 'Tech Crunch, Wired, BBC News, Buzzfeed, ABC News, Time...', text: 'Give me the news from Buzzfeed' },\n  ];\n\nconst NewsCards = ({ articles, activeArticle}) => {\n    const classes = useStyles();\n\n    if (!articles.length) {\n        return (\n          <Grow in>\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n              {infoCards.map((infoCard) => (\n                <Grid item xs={12} sm={6} md={4} lg={3} className={classes.infoCard}>\n                  <div className={classes.card} style={{ backgroundColor: infoCard.color }}>\n                    <Typography variant=\"h5\" component=\"h5\">{infoCard.title}</Typography>\n                    {infoCard.info ? <Typography variant=\"h6\" component=\"h6\"><strong>{infoCard.title.split(' ')[2]}</strong>: <br />{infoCard.info}</Typography> : null}\n                    <Typography variant=\"h6\" component=\"h6\">Try saying: <br /> <i>{infoCard.text}</i></Typography>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          </Grow>\n        );\n      }\n\n\n    return (\n        <Grow in>\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {articles.map((article, i) => (\n                    <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: 'flex' }}>\n                        <NewsCard article={article} activeArticle={activeArticle} i={i} />\n                    </Grid>\n                ))}\n            </Grid>\n         </Grow>\n    );\n}\n\nexport default NewsCards;"]},"metadata":{},"sourceType":"module"}